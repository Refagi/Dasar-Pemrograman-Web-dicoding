/*
Box Model
Pada pembahasan background-color disinggung bahwa setiap elemen ditampilkan seperti sebuah boxes atau kotak. 
Setiap elemen yang dibuat pada HTML akan menciptakan sebuah kotak untuk menampung kontennya. 
Layaknya bentuk kotak pada umumnya, ada beberapa nilai atau komponen padanya.

-Lebar dan tinggi pada kotak (konten).
-Ruang kosong antara konten dengan border (padding).
-Garis tepi (border).
-Jarak dari elemen lain (margin). */


/*
Content
Content atau konten merupakan sebuah inti dari kotak elemen yang merupakan konten dari elemen itu sendiri.

Padding
Area yang menjadi jarak antara border elemen dengan konten yang ditampilkan. Ketika kita menerapkan background-color, 
warna tersebut diterapkan pada area padding. Penerapan ukuran padding pada elemen adalah opsional.

Border
Border merupakan garis yang mencakup konten beserta padding. Penerapan border pada elemen adalah opsional.

Margin
Berbeda dengan padding, margin merupakan area jarak di luar border. Pada ilustrasi di atas, margin ditunjukkan 
dengan warna merah muda. Namun, pada aslinya margin selalu transparan dan penerapan margin pada elemen adalah 
opsional.

Edge of Element
Edge of element merupakan batas dari suatu elemen. Di dalamnya terdapat margin, border, padding, dan konten. 
Pada ilustrasi di atas, batas elemen ditunjukkan dengan garis putus, tetapi pada aslinya batas elemen selalu 
tidak terlihat.
*/


/*
Dimension
Standarnya, sebuah box yang dihasilkan tiap elemen selalu cukup untuk menampung konten. Namun, kita dapat mengatur 
nilai dimensi dari box tersebut dengan properti width dan height. 

Cara yang paling banyak digunakan dalam menentukan dimensi kotak adalah menggunakan piksel, persentase, atau ems. 
Secara tradisional, piksel merupakan cara yang paling populer karena kita dapat merancang dan mengontrol ukuran 
secara akurat. 

Berbeda ketika kita menggunakan persentase, ukuran kotak akan relatif atau menyesuaikan dari ukuran lain, 
seperti ukuran jendela browser atau ukuran induk yang menaunginya. Namun ketika menggunakan ems, nilai dimensi 
kotak akan menyesuaikan berdasarkan ukuran teks yang ditampilkan pada konten elemen tersebut.

Pada saat ini, banyak developer mulai merancang menggunakan persentase dan ems untuk menetapkan ukuran box agar 
dapat menyesuaikan dengan berbagai macam ukuran layar.
*/
.box {
    height: 300px;
    width: 300px;
    background-color: #11c5c6;
  }
  
  p {
    height: 75%;
    width: 75%;
    background-color: #fbdd1c;
  }

  /*
  Pada contoh di atas, kita dapat melihat elemen <div> memiliki dimensi elemen dengan lebar 300px dan tinggi 300px. 
  Di dalamnya terdapat elemen <p> yang memiliki ukuran elemen 75% dari lebar dan tinggi elemen induknya. 
  Dengan demikian, elemen <p> memiliki ukuran 225px untuk panjang dan lebarnya.
  
  
  Limiting Dimension
Beberapa website yang ada sekarang menampilkan layout yang dapat melebar dan menyempit mengikuti ukuran layar 
pengguna. Pada prinsip tampilan tersebut, mungkin kita memerlukan sebuah limitasi ukuran yang harus ditetapkan agar 
konten selalu ditampilkan secara proporsional. Untuk melakukannya kita manfaatkan properti min-width dan max-width.

min-width: menetapkan nilai lebar minimal yang harus dimiliki elemen.
max-width: menetapkan nilai lebar maksimal yang harus dimiliki elemen.

Keduanya merupakan properti yang sangat membantu untuk memastikan konten halaman dapat terbaca oleh pengguna 
(terutama ketika pengguna menggunakan ponsel). Misalnya, kita dapat menggunakan properti max-width untuk memastikan 
bahwa baris teks yang muncul tidak terlalu lebar.*/

.content {
    max-width: 800px;
    height: 400px;
  
    margin-left: auto;
    margin-right: auto;
    background-color: deeppink;
  }
  
  p {
    font-size: 1.5em;
    font-weight: bold;
  }

  /*
  Overflowing Content
Dimensi box yang dihasilkan elemen selalu cukup untuk menampung konten, tetapi hal ini tidak berlaku jika kita 
tetapkan secara manual panjang dan lebarnya. Tak jarang terjadi overflow ketika kita menerapkan ukuran pada 
elemen dengan konten di dalamnya yang begitu banyak.*/

div {
    height: 200px;
    width: 200px;
    background-color: lightgreen;
  }

  /*
  Untuk menangani kasus seperti ini kita bisa gunakan properti overflow, properti ini dapat bernilai berikut.

visible
Visible merupakan nilai default pada properti ini. Konten yang tidak tertampung (overflow) akan tetap ditampilkan seperti pada standarnya.

hidden
Jika terjadi overflow, konten yang tidak tertampung akan disembunyikan.

scroll
Memunculkan scroll bar pada pinggir elemen sehingga konten yang tidak tertampung akan ditampilkan dengan scroll bar. 
Jika menggunakan nilai ini, scroll bar akan tetap muncul walaupun konten tidak terjadi overflow.

auto
Sama seperti scroll, hanya jika tidak terjadi overflow, nilai visible yang akan diterapkan.*/

/*
Box-Sizing
Sebelum CSS3, ukuran lebar dan panjang elemen mengacu pada konten elemen (content-box). Itu berarti ukuran elemen 
seluruhnya merupakan nilai panjang (width) dan lebar (height) yang kita spesifikasikan ditambah dengan nilai 
padding dan border yang diterapkan pada elemen. Hal tersebut membuat sebagian developer menjadi sulit dalam 
menetapkan ukuran dimensi.

Pada CSS3, kita dapat memilih tipe pengukuran lain dalam menentukan dimensi elemen. Dengan menggunakan properti 
box-sizing, kita dapat menentukannya berdasarkan border box. Ukuran elemen sudah termasuk content, padding, 
dan border. Dengan metode ini, hasil elemen yang ditampilkan (termasuk padding dan border) akan memiliki dimensi 
yang sama persis seperti yang kita tentukan.*/

div {
    height: 200px;
    width: 200px;
    background-color: lightgreen;
    border: 10px solid cornflowerblue;
    padding: 20px;
  }
  
  .content {
    box-sizing: content-box;
  }
  
  .box {
    box-sizing: border-box;
  }

  /*
  Elemen menerapkan box-sizing: content-box; Ukuran box secara keseluruhan akan menjadi 260px lebar, 
  260px tinggi; 260 = 200 + 20 + 20 + 10 + 10
  
  Elemen menerapkan box-sizing: border-box; Ukuran box akan tetap 200px lebar, 200px tinggi meskipun menerapkan 
  padding dan border*/


  /*
  Box Model: Border 
  
  Border Width
Properti border-width digunakan untuk mengatur ketebalan dari border, nilai dari properti ini dapat berupa piksel 
atau menggunakan predefined names value, seperti thin, medium, dan thick. Kita tidak bisa menggunakan nilai 
persentase (%) pada properti ini.*/
.box {
  border-top-width: 2px;
  border-right-width: 1px;
  border-bottom-width: 1px;
  border-left-width: 2px;
}

/* Namun, kita juga dapat menetapkan nilai keempatnya sekaligus dalam satu properti seperti ini. */

.box {
  border-width: 2px 1px 1px 2px; /*top right bottom left*/
}

/*
Properti border-width dapat ditentukan dengan menggunakan satu, dua, tiga, atau empat nilai. Berikut penjelasannya.

- Ketika satu nilai ditentukan, nilai berlaku untuk empat sisi.
- Ketika dua nilai ditentukan, nilai pertama berlaku untuk sisi atas dan bawah, nilai kedua untuk sisi kiri dan kanan.
- Ketika tiga nilai ditentukan, nilai pertama berlaku untuk sisi atas, nilai yang kedua untuk sisi kiri dan kanan, 
nilai ketiga untuk sisi bawah.
- Ketika empat nilai ditentukan, nilai pertama berlaku untuk sisi atas, nilai yang kedua untuk sisi kanan, 
nilai yang ketiga untuk sisi bawah, dan nilai yang keempat untuk sisi kiri. Urutan tersebut berdasarkan arah 
jarum jam (clockwise).*/


/*
Border Style
Kita bisa menetapkan tipe border dengan menggunakan properti border-style. Berikut adalah nilai-nilai yang dapat 
digunakan pada properti ini.

Nilai Properti

Penjelasan

-solid

Tipe garis padat (tidak terputus-putus).

-dotted

Garis yang dibentuk dari serangkaian titik-titik (jika ketebalan garis 2px, titik-titik akan berukuran 2px dan memiliki jarak 2px antar titiknya).

-dashed

Garis yang dibentuk dari serangkaian garis pendek.

-double

Garis yang dibentuk dari dua buah garis padat.

-groove

Tipe garis yang berbentuk seperti frame.

-hidden

Digunakan untuk menyembunyikan garis pada elemen.


Kita juga bisa menetapkan tipe garis secara individual pada sisi elemen dengan menggunakan empat properti terpisah*/

.box {
  border-top-style: solid;
  border-right-style: dotted;
  border-bottom-style: groove;
  border-left-style: double;

  border-width: 4px;
  border-color: red;
  width: 200px;
  height: 50px;
}

/*
Border Color
Properti terakhir adalah border-color. Properti ini digunakan untuk menentukan warna pada garis dengan menggunakan 
nilai RGB, Hex, atau nama warna pada CSS.*/

/* menggunakan rgb format */
/* border-color: rgb(80, 138, 212); */
 
/* menggunakan format hex */
/* border-color: #4ee717; */
 
/* menggunakan nama warna */
/* border-color: red; 


Untuk menyingkat cara, kita juga dapat menetapkan nilai keempatnya sekaligus dalam satu properti seperti berikut.

border-color: #919191 #111111 #4ee717 #00c8eb;*/


/*
Shorthand
Untuk menerapkan border pada elemen kita harus mendefinisikan seluruh properti border yang ada. 
Dimulai dari menetapkan ketebalan (border-width), tipe (border-type), dan warna (border-color). 
Jika kita lupa menetapkan salah satu properti tersebut, garis tidak akan tampak pada elemen.

Properti border memiliki tiga buah nilai yang digunakan untuk menentukan ketebalan, tipe, dan warna pada border

div {border: width, type, color;}*/

.box {
  border: 4px dashed #00a2c6;
  width: 200px;
}
 
/* semua element bisa lihat lebih jelas dan lengkap , di website MDN Mozhila dan W3School */