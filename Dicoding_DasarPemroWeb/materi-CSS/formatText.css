/* Text Styling: Line Height, Text Indent, dan Text Alignment


Line Height
Properti line-height digunakan untuk mengatur jarak minimal dari garis dasar ke garis dasar dalam menampilkannya 
teks pada halaman. */

.ln2 {
    line-height: 2;
  }
  
  .ln200 {
    line-height: 200%;
  }
  
  .ln2em {
    line-height: 2em;
  }

/*
Cara pertama merupakan cara yang paling mudah digunakan karena hanya menentukan nilai dengan satu angka. Konsepnya, 
angka tersebut nantinya dikalikan dengan nilai font-size sebelum diterapkan pada nilai properti line-height. 
Contohnya, ukuran font standar pada paragraf adalah 16 piksel dan kita definisikan properti line-height dengan 
nilai 2. Alhasil, seharusnya nilai properti line-height adalah 16 piksel * 2 = 32 piksel (dua kali lebih besar 
dari ukuran font).

Properti line-height dapat diaplikasikan ke seluruh elemen yang ada pada HTML dan nilainya dapat diturunkan pada 
elemen turunannya.  




Text Indent
Dalam membuat sebuah dokumen tidak jarang kita membutuhkan jarak/lekuk di awal paragraf, 
hal tersebut dapat dilakukan pada website dengan menerapkan properti text-indent.  Kita dapat menentukan nilai 
properti ini melalui perhitungan panjang dalam px, em, dan in atau bisa menggunakan nilai persentase (%). 
Nilai persentase dihitung berdasarkan lebar dari induk elemen. Berikut contoh penggunaannya.

Perlu diingat kembali, properti ini hanya berpengaruh pada awal baris paragraf. Jika kita ingin menetapkannya untuk 
seluruh baris kita dapat gunakan margin atau padding, keduanya akan dibahas pada materi box model.



Text Alignment

-Nilai Properti

-Fungsi

text-align: left

Membuat perataan teks pada ujung kiri.

text-align: right

Membuat perataan teks pada ujung kanan.

text-align: center

Membuat perataan teks secara menengah.

text-align: justify

Membuat perataan teks yang setara pada ujung kiri dan kanannya.
*/



/*
Text Styling: Text Decoration, Text Transform, Word-Letter Spacing, dan Text Shadow 

Text Decoration
Properti ini paling populer digunakan ketika kita ingin membuat garis bawah atau underline pada teks. Namun, 
tidak hanya itu, ada beberapa nilai lain yang dapat kita gunakan untuk properti ini 

Nilai properti	Fungsi
text-decoration: underline

Memberikan garis bawah (underline) pada teks.

text-decoration: overline

Memberikan garis atas (overline) pada teks.

text-decoration: line-through

Memberikan efek tulisan dicoret (strikethrough).

text-decoration: none

Menghilangkan dekorasi teks yang ada pada elemen. */

.decoration-none {
    text-decoration: none;
  }




/*
Text Transform

Nilai Properti	Fungsi
text-transform: none

Teks yang ditampilkan sama seperti yang dituliskan.

text-transform: capitalize

Membuat huruf pertama besar pada tiap katanya.

text-transform: lowercase

Membuat seluruh teks menggunakan huruf kecil.

Text-transform: uppercase

Membuat seluruh teks menggunakan huruf besar.

*/

main {
    font-family: sans-serif;
  }
  
  .transform-none {
    text-transform: none;
  }
  
  .transform-capitalize {
    text-transform: capitalize;
  }
  
  .transform-lowercase {
    text-transform: lowercase;
  }
  
  .transform-uppercase {
    text-transform: uppercase;
  }

/*
Word and Letter Spacing
Properti selanjutnya yang bisa kita gunakan untuk memformat teks adalah letter-spacing dan word-spacing. 
Sebagaimana namanya, properti ini digunakan untuk mengatur spasi atau jarak pada teks. Properti letter-spacing 
digunakan untuk mengatur jarak antar huruf, sedangkan word-spacing digunakan untuk mengatur jarak antar kata.

Kedua elemen ini dapat diaplikasikan ke seluruh elemen yang ada pada HTML dan nilainya dapat diturunkan pada 
elemen turunannya*/

main {
    font-family: sans-serif;
  }
  
  .letter-spacing {
    letter-spacing: 4px;
  }
  
  .word-spacing {
    word-spacing: 1.5em;
  }


  /*Text Shadow
Memberikan bayangan pada teks telah menjadi hal yang umum digunakan meskipun tidak memiliki dukungan di semua 
browser. Pada CSS, kita dapat gunakan properti text-shadow untuk membuat bayangan pada teks 
(atau biasa disebut drop shadow).

Nilai dari properti ini cukup rumit karena membutuhkan tiga buah nilai dan satu buah nilai warna sehingga 
membutuhkan empat nilai dalam satu properti untuk menentukan bayangannya.

Nilai pertama: menunjukkan seberapa jauh ke kiri atau kanan (horizontal) bayangan harus ditampakkan.
Nilai kedua: menunjukkan jarak ke atas atau ke bawah (vertical) bayangan harus ditampakkan. 
Nilai ketiga (opsional): menentukan tingkat keburaman yang harus diterapkan pada bayangan.
Nilai keempat: menentukan warna yang digunakan pada bayangan.*/

main {
    font-family: sans-serif;
  }
  
  p {
    font-size: 2rem;
  }
  
  .one {
    text-shadow: 2px 2px 0px #000000;
    background-color: #eeeeee;
    color: #666666;
  }
  
  .two {
    text-shadow: 4px 4px 3px #666666;
    background-color: #dddddd;
    color: #666666;
  }

  .three {
    text-shadow: 4px 4px 7px #111111;
    background-color: #cccccc;
    color: #ffffff;
  }
  
  .four {
    text-shadow: -2px -2px #666666;
    background-color: #cccccc;
    color: #bbbbbb;
  }


  /* semua element bisa lihat lebih jelas dan lengkap , di website MDN Mozhila dan W3School */