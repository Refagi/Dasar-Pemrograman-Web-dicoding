/* Box Model: Padding
Padding merupakan jarak antara area konten dan border. Padding banyak diterapkan pada elemen jika elemen tersebut 
menerapkan warna latar atau pun border. Padding memberikan sedikit ruang sehingga konten di dalam elemen dapat 
lebih nyaman untuk ditampilkan. */

p {
    border: 4px solid #00a2c6;
    width: 350px;
  }
  
  p.example {
    padding: 10px;
  }

  /*
  Kita dapat menentukan nilai padding yang berbeda untuk masing-masing sisi elemen dengan menggunakan daftar properti berikut.

padding-top: 10px;
padding-right: 15px;
padding-bottom: 10px;
padding-left: 15px;

Selain itu, hal di atas dapat juga dilakukan dengan menggunakan shorthand seperti berikut.

padding: 10px 15px 10px 15px;*/


/*
Box Model: Margin
Seperti padding, margin merupakan ruang atau jarak pada sebuah elemen. Namun, jarak tersebut terletak diluar dari 
konten dan border element. Margin digunakan untuk menjaga elemen agar tidak bertabrakan satu sama lain atau dari 
tepi jendela browser.

Kita dapat menentukan nilai margin yang berbeda untuk masing-masing sisi elemen dengan menggunakan contoh daftar properti berikut.

margin-top: 10px;
margin-right: 15px;
margin-bottom: 20px;
margin-left: 25px;

Selain itu, kita juga dapat menggunakan shorthand untuk menetapkan keempat nilai di atas dalam satu properti berikut.

margin: 10px 15px 20px 25px;
Kita juga bisa menggunakan dua nilai saja untuk menentukan nilai margin vertikal dan horizontal.

/* top dan bottom bernilai 10px, left dan right bernilai 15px */

/*margin: 10px 15px;*/


/*
Box Model: Centering Content
Jika kita ingin membuat sebuah kotak berada tepat pada tengah sebuah halaman atau di dalam elemen induknya, 
margin kanan dan kiri bisa diatur dengan nilai auto. Untuk membuat kotak berada di tengah kita juga harus 
menentukan lebar dari kotak tersebut (menggunakan properti width). Jika tidak, kotak akan mengambil lebar penuh 
pada halaman atau induk elemen.*/

.box {
    width: 50%;
    border: 4px solid darkblue;
    padding: 20px;
    margin-bottom: 20px;
  }
  
  .box.center {
    margin: 0 auto;
  }

  /*
  Display Roles
  
  -Inline Element

~Elemen HTML yang secara default tidak menambahkan baris baru ketika dibuat.
~Nilai lebar dan tinggi elemen inline sebesar konten di dalamnya, dan tidak dapat diubah.
~Margin dan padding hanya mempengaruhi elemen secara horizontal, tidak vertikal.


  -Block Element

~Elemen HTML secara default menambahkan baris baru ketika dibuat.
~Jika tidak diatur lebarnya, lebar dari elemen block akan memenuhi lebar dari browser atau elemen yang menaunginya.
~Kita dapat mengatur dimensi dari elemen block.
~Di dalam elemen block, kita dapat menyimpan tag elemen HTML lainnya.
~Dengan menggunakan properti display, kita dapat mengubah sebuah elemen inline menjadi block, begitu pun sebaliknya. 
Properti ini juga dapat digunakan untuk menyembunyikan elemen yang ditampilkan.


Nilai dari properti ini dapat berupa hal berikut.

inline: mengubah elemen block berperilaku seperti elemen inline.

block: mengubah elemen inline berperilaku seperti elemen block.

inline-block: membuat elemen block tidak menambahkan baris baru ketika dibuat, tetapi tetap mempertahankan sifat lain dari elemen block.

none: menyembunyikan elemen dari halaman.


Properti ini banyak sekali digunakan dalam kasus dalam pembuatan navigasi. Biasanya, navigasi dibuat menggunakan 
elemen list yang memiliki sifat block sehingga item list selalu ditampilkan dalam baris baru. Dengan menggunakan 
properti display, kita dapat mengubah perilaku elemen list tersebut dengan menerapkan inline. Jadi, item list 
dapat ditampilkan secara horizontal.*/

li {
    display: inline;
  
    margin-left: 5px;
}  


/*
Box Shadow

Nilai dan cara kerja dari properti box-shadow mirip seperti text-shadow, yaitu nilainya menentukan jarak vertikal 
dan horizontal, tingkat keburaman, dan warna pada bayangan. Pada box shadow, kita juga dapat menentukan tingkat 
sebaran (spread) bayangan. Jika nilai semakin besar, bayangan yang tampak akan semakin luas.

untuk mengatur vertikal 
dan horizontal, tingkat keburaman, dan warna pada bayangan agar lebih mudah bisa melihat di website cssmatic.com
*/

.box {
    width: 200px;
    height: 200px;
  
    background-color: greenyellow;
  
    box-shadow: 6px 6px 5px 10px #666666;
  }

  /* Berikut adalah penjelasan tiap-tiap nilai dari propertinya.

Nilai pertama: menunjukkan seberapa jauh ke kiri atau kanan (horizontal) bayangan harus ditampakkan.
Nilai kedua: menunjukkan jarak ke atas atau ke bawah (vertical) bayangan harus ditampakkan. 
Nilai ketiga (opsional): menentukan tingkat keburaman yang harus diterapkan pada bayangan.
Nilai keempat (opsional): tingkat sebaran (spread) bayangan. Semakin besar nilai yang ditentukan, bayangan yang tampak akan semakin luas.
Nilai kelima: menentukan warna yang digunakan pada bayangan. */


/* 
Rounded Corner
CSS3 memperkenalkan kemampuan untuk membuat rounded corner atau sudut bundar pada box dengan menggunakan properti 
border-radius. Nilai dari properti ini merupakan tingkat lengkungan border dalam piksel. */

.rounded {
    width: 300px;
    padding: 20px;
    border: 4px solid deeppink;
  
    border-radius: 10px;
  }

  /* Kita bisa menetapkan nilai pada individu siku kotak dengan menggunakan properti yang terpisah seperti berikut.

.rounded {
  border-top-right-radius: 5px;
  border-bottom-right-radius: 10px;
  border-bottom-left-radius: 5px;
  border-top-left-radius: 10px;
}

Selain itu, kita dapat menggunakan shorthand property sehingga dapat menetapkan keempat nilainya dalam satu properti.

.rounded {
  border-radius: 10px 5px 10px 5px;
} */



/* object fit dan position membuat gambar yang ditampilkan dapat mempertahankan kualitas rasio aslinya meskipun 
ukuran lebar dan panjang dari elemen gambar tidak imbang.  */

.featured-image {
  width: 100%;
  max-height: 300px;
  object-fit: cover;
  object-position: center;
}


/* semua element bisa lihat lebih jelas dan lengkap , di website MDN Mozhila dan W3School */